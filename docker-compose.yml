version: "3"
services:
  # mutant-frontend:
  #   build:
  #     context: ./front-end
  #     dockerfile: Dockerfile
  #   command: sh -c "npm run build_saas && npm audit fix && npm start"
  #   tty: true
  #   working_dir: /root/frontend/
  #   environment:
  #     - NODE_ENV=development
  #   ports:
  #     - "4200:4200"
  #   depends_on: [mutant-backend, mongodb]
  #   links:
  #     - mutant-backend
  #   networks:
  #     - mutantarena-network
  #   volumes:
  #     - ./front-end:/root/frontend:cached
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: monitoring_prometheus
  #   restart: unless-stopped
  #   volumes:
  #     - ./monitor/prometheus/config:/etc/prometheus/
  #     - ./monitor/prometheus/data:/prometheus
  #   command:
  #     - "-config.file=/etc/prometheus/prometheus.yml"
  #     - "-storage.local.path=/prometheus"
  #   expose:
  #     - 9090
  #   ports:
  #     - 9090:9090
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: monitoring_grafana
  #   restart: unless-stopped
  #   links:
  #     - prometheus:prometheus
  #   volumes:
  #     - ./monitor/grafana:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_USERS_ALLOW_SIGN_UP=false

  mutant-report:
    build:
      context: ./report
      dockerfile: Dockerfile
    tty: true
    environment:
      - NODE_ENV=development
    ports:
      - "4201:4201"
    links:
      - mutant-backend
      # - mutant-frontend
    networks:
      - mutantarena-network
  mutant-runner:
    build:
      context: ./runner
      dockerfile: Dockerfile
    command: sh -c "npm start"
    tty: true
    working_dir: /root/runner/
    environment:
      - NODE_ENV=development
    links:
      - mutant-backend
    networks:
      - mutantarena-network
    volumes:
      - ./runner:/root/runner:cached
  mutant-backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    command: sh -c "npm install && npm start"
    tty: true
    working_dir: /root/backend/
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb/mutantarena
      - AUTHSOURCE=admin
      - MONGO_USER=mutant
      - MONGO_PASS=mutant2020!
      - COGNITO_USERPOOL_ID=
      - COGNITO_CLIENT_ID=
      - SQS_REGION=us-east-1
      - SQS_API_VERSION=2012-11-05
      - QUEUE_URL=
      - SQS_DELAY=5
      - SQS_ACTIVE=true
      - AWS_ACCESS_KEY=AKIAUV2NXXTK4DTVC6FA
      - AWS_SECRET_KEY=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
      - NODE_ENV=development
      - APP_NAME=mutant-arena
    ports:
      - "3000:3000"
    depends_on: [mongodb]
    #         conditional: service_started
    links:
      - mongodb
    networks:
      - mutantarena-network
    volumes:
      - ./back-end:/root/backend:cached
  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mutant
      MONGO_INITDB_ROOT_PASSWORD: mutant2020!
    ports:
      - "27017:27017"
    networks:
      - mutantarena-network
networks:
  mutantarena-network:
    driver: bridge
