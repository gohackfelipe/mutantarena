version: "3"
services:
  mutant-frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    tty: true
    environment:
      - SERVICE=http://localhost:3000
    ports:
      - "4200:4200"
    depends_on: [mutant-backend, mongodb]
    links:
      - mutant-backend
    networks:
      - mutantarena-network
  mutant-report:
    build:
      context: ./report
      dockerfile: Dockerfile
    tty: true
    ports:
      - "4201:4201"
    links:
      - mutant-backend
      - mutant-frontend
    networks:
      - mutantarena-network
  mutant-runner:
    build:
      context: ./runner
      dockerfile: Dockerfile
    tty: true
    links:
      - mutant-backend
    networks:
      - mutantarena-network
  mutant-backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    tty: true
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb/mutantarena
      - AUTHSOURCE=admin
      - MONGO_USER=mutant
      - MONGO_PASS=mutant2020!
      - COGNITO_USERPOOL_ID=us-east-1_KntF46Ssz
      - COGNITO_CLIENT_ID=36gmolud6nvp4a83aqukherb51
      - SQS_REGION=us-east-1
      - SQS_API_VERSION=2012-11-05
      - QUEUE_URL=https://sqs.us-east-1.amazonaws.com/321748712661/mutantarena-styker-processing
      - SQS_DELAY=5
      - SQS_ACTIVE=true
      - AWS_ACCESS_KEY=AKIAUV2NXXTK4DTVC6FA
      - AWS_SECRET_KEY=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
      - NODE_ENV=production
      - APP_NAME=mutant-arena
    ports:
      - "3000:3000"
    depends_on: [mongodb]
    #         conditional: service_started
    links:
      - mongodb
    networks:
      - mutantarena-network
  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mutant
      MONGO_INITDB_ROOT_PASSWORD: mutant2020!
    ports:
      - "27017:27017"
    networks:
      - mutantarena-network
networks:
  mutantarena-network:
    driver: bridge
