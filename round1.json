{"success":{"code":200,"data":[{"_id":"5f4d60262476cd369d38702c","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\nlet instance = new app();\n\ndescribe('testing', function () {\n\n    it('equaal', function () {\n        assert.equal(12, instance.add(10));\n    });\n});","user":"emaildofeliperibeiro@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-08-31T20:40:06.466Z"},{"_id":"5f4d60412476cd369d38702d","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\nlet instance = new app();\n\ndescribe('testing', function () {\n\n    it('equaal', function () {\n        assert.equal(10, instance.add(10));\n    });\n});","user":"emaildofeliperibeiro@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-08-31T20:40:33.154Z"},{"_id":"5f4d60c22476cd369d38702e","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\nlet instance = new app();\n\ndescribe('testing', function () {\n    it('equaal', function () {\n        expect(instance.add(10)).equal(10);\n    });\n});","user":"emaildofeliperibeiro@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-08-31T20:42:42.547Z"},{"_id":"5f4d60e42476cd369d38702f","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\nlet instance = new app();\n\ndescribe('testing', function () {\n    it('equaal', function () {\n        expect(instance.soma(10)).equal(10);\n    });\n});","user":"emaildofeliperibeiro@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-08-31T20:43:16.209Z"},{"_id":"5f4d60ff2476cd369d387030","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\nlet instance = new app();\n\ndescribe('testing', function () {\n    it('equaal', function () {\n        expect(instance.soma(10,10)).equal(20);\n    });\n});","user":"emaildofeliperibeiro@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/cb15f6b7-ff49-4e8e-b09f-020d5c6d91a9/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":5},\"start\":{\"column\":16,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":21,\"line\":4},\"start\":{\"column\":16,\"line\":4}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a - b\",\"status\":\"Killed\"}],\"source\":\"class MutantArena {\\n\\n    soma(a, b) {\\n        return a + b;\\n    }\\n}\\n\\nmodule.exports = MutantArena;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":4},"start":{"column":15,"line":2}},"mutatedLines":"    soma(a, b) {}","mutatorName":"Block","originalLines":"    soma(a, b) {\n        return a + b;\n    }","range":[36,65],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/cb15f6b7-ff49-4e8e-b09f-020d5c6d91a9/app.js","status":1,"testsRan":["testing equaal"]},{"id":"1","location":{"end":{"column":20,"line":3},"start":{"column":15,"line":3}},"mutatedLines":"        return a - b;","mutatorName":"BinaryExpression","originalLines":"        return a + b;","range":[53,58],"replacement":"a - b","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/cb15f6b7-ff49-4e8e-b09f-020d5c6d91a9/app.js","status":1,"testsRan":["testing equaal"]}],"dateCreated":"2020-08-31T20:43:43.752Z"},{"_id":"5f4d90212476cd369d387031","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n//Insira o seu código aqui\ndescribe('class PA', () => {\n    const pa = new app()\n    describe('soma', () => {\n        describe('deve retornar a soma de dois numeros', () => {\n            expect(pa.soma(1,3)).to.be.equal(4)\n        })\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"ENOENT: no such file or directory, open './mutants/abc5d761-67f9-447b-9058-e35e4f3999ee/report/mutation/html/bind-mutation-test-report.js'"}],"dateCreated":"2020-09-01T00:04:49.755Z"},{"_id":"5f4d90802476cd369d387032","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n//Insira o seu código aqui\ndescribe('class PA', () => {\n    const pa = new app()\n    describe('soma', () => {\n        describe('deve retornar a soma de dois numeros', () => {\n            expect(pa.soma(1,3)).to.equal(4)\n        })\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"ENOENT: no such file or directory, open './mutants/af080ab0-d03e-4610-80de-f5e822e42ed2/report/mutation/html/bind-mutation-test-report.js'"}],"dateCreated":"2020-09-01T00:06:24.768Z"},{"_id":"5f4d90832476cd369d387033","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \nconst mutant = new app()\n\ndescribre('#soma', ()=> {\n    it('should return 4', ()=>{\n        const result = mutant.soma(2,2)\n        expect(result).to.equal(4);\n    })\n})\n\n//Insira o seu código aqui","user":"emanoel.dev@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"Something went wrong in the initial test run"}],"dateCreated":"2020-09-01T00:06:27.888Z"},{"_id":"5f4d90aa2476cd369d387034","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \nconst mutant = new app()\n\ndescribe('#soma', ()=> {\n    it('should return 4', ()=>{\n        const result = mutant.soma(2,2)\n        expect(result).to.equal(4);\n    })\n})\n\n//Insira o seu código aqui","user":"emanoel.dev@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/ecd82c62-0e79-460e-baf0-cff20e7d3f50/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":5},\"start\":{\"column\":16,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":21,\"line\":4},\"start\":{\"column\":16,\"line\":4}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a - b\",\"status\":\"Killed\"}],\"source\":\"class MutantArena {\\n\\n    soma(a, b) {\\n        return a + b;\\n    }\\n}\\n\\nmodule.exports = MutantArena;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":4},"start":{"column":15,"line":2}},"mutatedLines":"    soma(a, b) {}","mutatorName":"Block","originalLines":"    soma(a, b) {\n        return a + b;\n    }","range":[36,65],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/ecd82c62-0e79-460e-baf0-cff20e7d3f50/app.js","status":1,"testsRan":["#soma should return 4"]},{"id":"1","location":{"end":{"column":20,"line":3},"start":{"column":15,"line":3}},"mutatedLines":"        return a - b;","mutatorName":"BinaryExpression","originalLines":"        return a + b;","range":[53,58],"replacement":"a - b","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/ecd82c62-0e79-460e-baf0-cff20e7d3f50/app.js","status":1,"testsRan":["#soma should return 4"]}],"dateCreated":"2020-09-01T00:07:06.186Z"},{"_id":"5f4d90ce2476cd369d387035","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n//Insira o seu código aqui\ndescribe('class PA', () => {\n    const pa = new app()\n    describe('somaAritmetica', () => {\n        describe(pa.soma(1,4)).eql(5)\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"Something went wrong in the initial test run"}],"dateCreated":"2020-09-01T00:07:42.097Z"},{"_id":"5f4d90e52476cd369d387036","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n//Insira o seu código aqui\ndescribe('class PA', () => {\n    const pa = new app()\n    describe('somaAritmetica', () => {\n        expect(pa.soma(1,4)).eql(5)\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"ENOENT: no such file or directory, open './mutants/2df46d4e-124b-4259-97b3-a79769892fb4/report/mutation/html/bind-mutation-test-report.js'"}],"dateCreated":"2020-09-01T00:08:05.388Z"},{"_id":"5f4d90fe2476cd369d387037","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n//Insira o seu código aqui\ndescribe('class PA', () => {\n    const pa = new app();\n    describe('somaAritmetica', () => {\n        expect(pa.soma(1,4)).to.equal(5);\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"ENOENT: no such file or directory, open './mutants/61bef301-3f6f-4f77-b453-8ef38cee5f11/report/mutation/html/bind-mutation-test-report.js'"}],"dateCreated":"2020-09-01T00:08:30.170Z"},{"_id":"5f4d91292476cd369d387038","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \nconst mutant = new app()\n\ndescribe('#soma', ()=> {\n    it('should return 4', ()=>{\n        const result = mutant.soma(2,2)\n        expect(result).to.equal(4);\n    })\n})\n\n//Insira o seu código aqui","user":"emanoel.dev@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/a4d8e278-bf9c-4c39-a14d-40f2171bf338/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":5},\"start\":{\"column\":16,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":21,\"line\":4},\"start\":{\"column\":16,\"line\":4}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a - b\",\"status\":\"Killed\"}],\"source\":\"class MutantArena {\\n\\n    soma(a, b) {\\n        return a + b;\\n    }\\n}\\n\\nmodule.exports = MutantArena;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":4},"start":{"column":15,"line":2}},"mutatedLines":"    soma(a, b) {}","mutatorName":"Block","originalLines":"    soma(a, b) {\n        return a + b;\n    }","range":[36,65],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/a4d8e278-bf9c-4c39-a14d-40f2171bf338/app.js","status":1,"testsRan":["#soma should return 4"]},{"id":"1","location":{"end":{"column":20,"line":3},"start":{"column":15,"line":3}},"mutatedLines":"        return a - b;","mutatorName":"BinaryExpression","originalLines":"        return a + b;","range":[53,58],"replacement":"a - b","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/a4d8e278-bf9c-4c39-a14d-40f2171bf338/app.js","status":1,"testsRan":["#soma should return 4"]}],"dateCreated":"2020-09-01T00:09:13.756Z"},{"_id":"5f4d915e2476cd369d387039","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n//Insira o seu código aqui\ndescribe('class PA', () => {\n    describe('soma', () => {\n        const pa = new app();\n        expect(pa.soma(1,4)).to.equal(5);\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"ENOENT: no such file or directory, open './mutants/46ed610a-6672-4a23-b881-7161f9309c64/report/mutation/html/bind-mutation-test-report.js'"}],"dateCreated":"2020-09-01T00:10:06.446Z"},{"_id":"5f4d91902476cd369d38703a","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\ndescribe('class PA', () => {\n    describe('soma', () => {\n        it('deve retornar a soma', () => {\n            const pa = new app();\n            expect(pa.soma(1,4)).to.equal(5);\n        })\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/001b44b6-e09a-4c94-a4fd-b14d9f844427/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":5},\"start\":{\"column\":16,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":21,\"line\":4},\"start\":{\"column\":16,\"line\":4}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a - b\",\"status\":\"Killed\"}],\"source\":\"class MutantArena {\\n\\n    soma(a, b) {\\n        return a + b;\\n    }\\n}\\n\\nmodule.exports = MutantArena;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":4},"start":{"column":15,"line":2}},"mutatedLines":"    soma(a, b) {}","mutatorName":"Block","originalLines":"    soma(a, b) {\n        return a + b;\n    }","range":[36,65],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/001b44b6-e09a-4c94-a4fd-b14d9f844427/app.js","status":1,"testsRan":["class PA soma deve retornar a soma"]},{"id":"1","location":{"end":{"column":20,"line":3},"start":{"column":15,"line":3}},"mutatedLines":"        return a - b;","mutatorName":"BinaryExpression","originalLines":"        return a + b;","range":[53,58],"replacement":"a - b","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/001b44b6-e09a-4c94-a4fd-b14d9f844427/app.js","status":1,"testsRan":["class PA soma deve retornar a soma"]}],"dateCreated":"2020-09-01T00:10:56.594Z"},{"_id":"5f4d925c2476cd369d38703b","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\nlet instance = new app();\n\ndescribe('Teste do Rodrigo', function () {\n    it(\"validando\", function () {\n        expect(instance.soma(10,10)).equal(20);\n    });\n});","user":"emaildofeliperibeiro@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/e65163c0-0102-4284-8277-c90fbd30b22d/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":5},\"start\":{\"column\":16,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":21,\"line\":4},\"start\":{\"column\":16,\"line\":4}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a - b\",\"status\":\"Killed\"}],\"source\":\"class MutantArena {\\n\\n    soma(a, b) {\\n        return a + b;\\n    }\\n}\\n\\nmodule.exports = MutantArena;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":4},"start":{"column":15,"line":2}},"mutatedLines":"    soma(a, b) {}","mutatorName":"Block","originalLines":"    soma(a, b) {\n        return a + b;\n    }","range":[36,65],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/e65163c0-0102-4284-8277-c90fbd30b22d/app.js","status":1,"testsRan":["Teste do Rodrigo validando"]},{"id":"1","location":{"end":{"column":20,"line":3},"start":{"column":15,"line":3}},"mutatedLines":"        return a - b;","mutatorName":"BinaryExpression","originalLines":"        return a + b;","range":[53,58],"replacement":"a - b","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/e65163c0-0102-4284-8277-c90fbd30b22d/app.js","status":1,"testsRan":["Teste do Rodrigo validando"]}],"dateCreated":"2020-09-01T00:14:20.730Z"},{"_id":"5f4d92af2476cd369d38703c","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n\nlet instancia = new app();\nresultado = instancia.soma(1,1);\ndescribe ('TesteRodrigo', function(){\n    it ('Igual', function(){\n        assert.equal(instancia.soma(1,1).equal(2))\n    })\n} )\n","user":"rfrancacosta@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-09-01T00:15:43.404Z"},{"_id":"5f4d93f42476cd369d38703d","arena":"5f4296f22476cd369d38702a","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\n\nlet instancia = new app();\nresultado = instancia.soma(1,1);\ndescribe ('TesteRodrigo', function(){\n    it ('Igual', function(){\n        assert.equal(instancia.soma(1,1),2)\n    })\n} )\n","user":"rfrancacosta@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/64d12cec-6370-4d97-a773-1a63cefceb06/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":5},\"start\":{\"column\":16,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":21,\"line\":4},\"start\":{\"column\":16,\"line\":4}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a - b\",\"status\":\"Killed\"}],\"source\":\"class MutantArena {\\n\\n    soma(a, b) {\\n        return a + b;\\n    }\\n}\\n\\nmodule.exports = MutantArena;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":4},"start":{"column":15,"line":2}},"mutatedLines":"    soma(a, b) {}","mutatorName":"Block","originalLines":"    soma(a, b) {\n        return a + b;\n    }","range":[36,65],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/64d12cec-6370-4d97-a773-1a63cefceb06/app.js","status":1,"testsRan":["TesteRodrigo Igual"]},{"id":"1","location":{"end":{"column":20,"line":3},"start":{"column":15,"line":3}},"mutatedLines":"        return a - b;","mutatorName":"BinaryExpression","originalLines":"        return a + b;","range":[53,58],"replacement":"a - b","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/64d12cec-6370-4d97-a773-1a63cefceb06/app.js","status":1,"testsRan":["TesteRodrigo Igual"]}],"dateCreated":"2020-09-01T00:21:08.231Z"},{"_id":"5f4d95422476cd369d38703e","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\ndescribe('PA', () => {\n    describe('somaAritmetica', () => {\n        describe('[1,2,3,4], n=1', () => {\n            expect(1,4,4).eql(10)\n        })\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"Something went wrong in the initial test run"}],"dateCreated":"2020-09-01T00:26:42.312Z"},{"_id":"5f4d95602476cd369d38703f","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\ndescribe('PA', () => {\n    describe('somaAritmetica', () => {\n        describe('[1,2,3,4], n=1', () => {\n            it('deve retornar a soma dessa sequencia', () => {\n                expect(1,4,4).eql(10)\n            })\n        })\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-09-01T00:27:12.720Z"},{"_id":"5f4d95b02476cd369d387040","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\ndescribe('PA', () => {\n    describe('somaAritmetica', () => {\n        describe('[1,2,3,4], n=1', () => {\n            it('deve retornar a soma dessa sequencia', () => {\n                expect(1,4,4).to.equal(10)\n            })\n        })\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-09-01T00:28:32.066Z"},{"_id":"5f4d96252476cd369d387041","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar instance = require('./app');\n  \n\ndescribre('#somaAritmetica', ()=>{\n    it('should return 10', ()=>{\n        const result = instance.somaAritmetica(2,2,2)\n        expect(result).to.equal(4)\n    })\n})\n\n//Insira o seu código aqui","user":"emanoel.dev@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"Something went wrong in the initial test run"}],"dateCreated":"2020-09-01T00:30:29.188Z"},{"_id":"5f4d963c2476cd369d387042","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar instance = require('./app');\n  \n\ndescribe('#somaAritmetica', ()=>{\n    it('should return 10', ()=>{\n        const result = instance.somaAritmetica(2,2,2)\n        expect(result).to.equal(4)\n    })\n})\n\n//Insira o seu código aqui","user":"emanoel.dev@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-09-01T00:30:52.415Z"},{"_id":"5f4d96632476cd369d387043","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n  \n\n//Insira o seu código aqui\ndescribe('pa', () => {\n    classPA = new app();\n    it('[1,2,3,4], n=4 deve retonar 10', () => {\n       expect(classPA.somaAritmetica(1,4,4)).to.equal(10)\n    })\n})","user":"marcelo.nalon@engenharia.ufjf.br","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/e6fb7ed1-f53c-484f-a152-d4f89b32f339/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":6},\"start\":{\"column\":31,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":33,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n * (a1 + an) * 2\",\"status\":\"Killed\"},{\"id\":\"2\",\"location\":{\"end\":{\"column\":29,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n / (a1 + an)\",\"status\":\"Killed\"},{\"id\":\"3\",\"location\":{\"end\":{\"column\":28,\"line\":5},\"start\":{\"column\":21,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a1 - an\",\"status\":\"Killed\"}],\"source\":\"class PA {\\n\\n    somaAritmetica(a1, an, n) {\\n\\n        return n * (a1 + an) / 2\\n    }\\n}\\n\\nmodule.exports = PA;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":5},"start":{"column":30,"line":2}},"mutatedLines":"    somaAritmetica(a1, an, n) {}","mutatorName":"Block","originalLines":"    somaAritmetica(a1, an, n) {\n\n        return n * (a1 + an) / 2\n    }","range":[42,83],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/e6fb7ed1-f53c-484f-a152-d4f89b32f339/app.js","status":1,"testsRan":["pa [1,2,3,4], n=4 deve retonar 10"]},{"id":"1","location":{"end":{"column":32,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n * (a1 + an) * 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,77],"replacement":"n * (a1 + an) * 2","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/e6fb7ed1-f53c-484f-a152-d4f89b32f339/app.js","status":1,"testsRan":["pa [1,2,3,4], n=4 deve retonar 10"]},{"id":"2","location":{"end":{"column":28,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n / (a1 + an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,73],"replacement":"n / (a1 + an)","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/e6fb7ed1-f53c-484f-a152-d4f89b32f339/app.js","status":1,"testsRan":["pa [1,2,3,4], n=4 deve retonar 10"]},{"id":"3","location":{"end":{"column":27,"line":4},"start":{"column":20,"line":4}},"mutatedLines":"        return n * (a1 - an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[65,72],"replacement":"a1 - an","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/e6fb7ed1-f53c-484f-a152-d4f89b32f339/app.js","status":1,"testsRan":["pa [1,2,3,4], n=4 deve retonar 10"]}],"dateCreated":"2020-09-01T00:31:31.124Z"},{"_id":"5f4d96762476cd369d387044","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar instanceClass = require('./app');\nconst instaceObject = new instanceClass()\n  \n\ndescribe('#somaAritmetica', ()=>{\n    it('should return 10', ()=>{\n        const result = instaceObject.somaAritmetica(2,2,2)\n        expect(result).to.equal(4)\n    })\n})\n\n//Insira o seu código aqui","user":"emanoel.dev@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/c53b537d-f04a-4048-9561-91c9edce2730/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":6},\"start\":{\"column\":31,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":33,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n * (a1 + an) * 2\",\"status\":\"Killed\"},{\"id\":\"2\",\"location\":{\"end\":{\"column\":29,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n / (a1 + an)\",\"status\":\"Killed\"},{\"id\":\"3\",\"location\":{\"end\":{\"column\":28,\"line\":5},\"start\":{\"column\":21,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a1 - an\",\"status\":\"Killed\"}],\"source\":\"class PA {\\n\\n    somaAritmetica(a1, an, n) {\\n\\n        return n * (a1 + an) / 2\\n    }\\n}\\n\\nmodule.exports = PA;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":5},"start":{"column":30,"line":2}},"mutatedLines":"    somaAritmetica(a1, an, n) {}","mutatorName":"Block","originalLines":"    somaAritmetica(a1, an, n) {\n\n        return n * (a1 + an) / 2\n    }","range":[42,83],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/c53b537d-f04a-4048-9561-91c9edce2730/app.js","status":1,"testsRan":["#somaAritmetica should return 10"]},{"id":"1","location":{"end":{"column":32,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n * (a1 + an) * 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,77],"replacement":"n * (a1 + an) * 2","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/c53b537d-f04a-4048-9561-91c9edce2730/app.js","status":1,"testsRan":["#somaAritmetica should return 10"]},{"id":"2","location":{"end":{"column":28,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n / (a1 + an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,73],"replacement":"n / (a1 + an)","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/c53b537d-f04a-4048-9561-91c9edce2730/app.js","status":1,"testsRan":["#somaAritmetica should return 10"]},{"id":"3","location":{"end":{"column":27,"line":4},"start":{"column":20,"line":4}},"mutatedLines":"        return n * (a1 - an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[65,72],"replacement":"a1 - an","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/c53b537d-f04a-4048-9561-91c9edce2730/app.js","status":1,"testsRan":["#somaAritmetica should return 10"]}],"dateCreated":"2020-09-01T00:31:50.801Z"},{"_id":"5f4d97562476cd369d387045","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n\nlet instancia = new app();\ninstancia.somaAritmetica(1, 2, 1)\ndescribe('myteste', function () {\n    it('deve retornar', function () {\n        assert.equal(instancia.somaAritmetica(1,2,3), 3)\n    })\n})\n\n//Insira o seu código aqui","user":"rfrancacosta@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-09-01T00:35:34.140Z"},{"_id":"5f4d97892476cd369d387046","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n\nlet instancia = new app();\ninstancia.somaAritmetica(1, 2, 1)\ndescribe('myteste', function () {\n    it('deve retornar', function () {\n        assert.equal(instancia.somaAritmetica(1,2,2), 2)\n    })\n})\n\n//Insira o seu código aqui","user":"rfrancacosta@gmail.com","status":"ERR","__v":0,"mutants":[{"error":"There were failed tests in the initial test run."}],"dateCreated":"2020-09-01T00:36:25.359Z"},{"_id":"5f4d97b92476cd369d387047","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n\nlet instancia = new app();\ninstancia.somaAritmetica(1, 2, 1)\ndescribe('myteste', function () {\n    it('deve retornar', function () {\n        assert.equal(instancia.somaAritmetica(1,1,1), 1)\n    })\n})\n\n//Insira o seu código aqui","user":"rfrancacosta@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/d3509689-4518-4a65-9e3c-02285fe32dae/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":6},\"start\":{\"column\":31,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":33,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n * (a1 + an) * 2\",\"status\":\"Killed\"},{\"id\":\"2\",\"location\":{\"end\":{\"column\":29,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n / (a1 + an)\",\"status\":\"Killed\"},{\"id\":\"3\",\"location\":{\"end\":{\"column\":28,\"line\":5},\"start\":{\"column\":21,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a1 - an\",\"status\":\"Killed\"}],\"source\":\"class PA {\\n\\n    somaAritmetica(a1, an, n) {\\n\\n        return n * (a1 + an) / 2\\n    }\\n}\\n\\nmodule.exports = PA;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":5},"start":{"column":30,"line":2}},"mutatedLines":"    somaAritmetica(a1, an, n) {}","mutatorName":"Block","originalLines":"    somaAritmetica(a1, an, n) {\n\n        return n * (a1 + an) / 2\n    }","range":[42,83],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/d3509689-4518-4a65-9e3c-02285fe32dae/app.js","status":1,"testsRan":["myteste deve retornar"]},{"id":"1","location":{"end":{"column":32,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n * (a1 + an) * 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,77],"replacement":"n * (a1 + an) * 2","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/d3509689-4518-4a65-9e3c-02285fe32dae/app.js","status":1,"testsRan":["myteste deve retornar"]},{"id":"2","location":{"end":{"column":28,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n / (a1 + an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,73],"replacement":"n / (a1 + an)","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/d3509689-4518-4a65-9e3c-02285fe32dae/app.js","status":1,"testsRan":["myteste deve retornar"]},{"id":"3","location":{"end":{"column":27,"line":4},"start":{"column":20,"line":4}},"mutatedLines":"        return n * (a1 - an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[65,72],"replacement":"a1 - an","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/d3509689-4518-4a65-9e3c-02285fe32dae/app.js","status":1,"testsRan":["myteste deve retornar"]}],"dateCreated":"2020-09-01T00:37:13.657Z"},{"_id":"5f4d98162476cd369d387048","arena":"5f4298202476cd369d38702b","testCaseCode":"//O código abaixo foi gerado automáticamente. //Ref. para classes importantes para enriquecer o seu teste.\nvar assert = require('assert');\nvar expect = require('chai').expect;\n//Ref. da classe mutacionada. Não apagar essa linha.\nvar app = require('./app');\n\nlet instancia = new app();\ninstancia.somaAritmetica(1, 2, 1)\ndescribe('myteste', function () {\n    it('deve retornar', function () {\n        assert.equal(instancia.somaAritmetica(5,5,5), 25)\n    })\n})\n\n//Insira o seu código aqui","user":"rfrancacosta@gmail.com","status":"OK","__v":0,"report":"document.querySelector('mutation-test-report-app').report = {\"files\":{\"/home/ubuntu/mutantarena/runner/mutants/38009398-3fbc-48a8-9589-cb1d8d9c03da/app.js\":{\"language\":\"javascript\",\"mutants\":[{\"id\":\"0\",\"location\":{\"end\":{\"column\":6,\"line\":6},\"start\":{\"column\":31,\"line\":3}},\"mutatorName\":\"Block\",\"replacement\":\"{}\",\"status\":\"Killed\"},{\"id\":\"1\",\"location\":{\"end\":{\"column\":33,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n * (a1 + an) * 2\",\"status\":\"Killed\"},{\"id\":\"2\",\"location\":{\"end\":{\"column\":29,\"line\":5},\"start\":{\"column\":16,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"n / (a1 + an)\",\"status\":\"Killed\"},{\"id\":\"3\",\"location\":{\"end\":{\"column\":28,\"line\":5},\"start\":{\"column\":21,\"line\":5}},\"mutatorName\":\"BinaryExpression\",\"replacement\":\"a1 - an\",\"status\":\"Killed\"}],\"source\":\"class PA {\\n\\n    somaAritmetica(a1, an, n) {\\n\\n        return n * (a1 + an) / 2\\n    }\\n}\\n\\nmodule.exports = PA;\"}},\"schemaVersion\":\"1.0\",\"thresholds\":{\"break\":null,\"high\":80,\"low\":60}};","mutants":[{"id":"0","location":{"end":{"column":5,"line":5},"start":{"column":30,"line":2}},"mutatedLines":"    somaAritmetica(a1, an, n) {}","mutatorName":"Block","originalLines":"    somaAritmetica(a1, an, n) {\n\n        return n * (a1 + an) / 2\n    }","range":[42,83],"replacement":"{}","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/38009398-3fbc-48a8-9589-cb1d8d9c03da/app.js","status":1,"testsRan":["myteste deve retornar"]},{"id":"1","location":{"end":{"column":32,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n * (a1 + an) * 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,77],"replacement":"n * (a1 + an) * 2","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/38009398-3fbc-48a8-9589-cb1d8d9c03da/app.js","status":1,"testsRan":["myteste deve retornar"]},{"id":"2","location":{"end":{"column":28,"line":4},"start":{"column":15,"line":4}},"mutatedLines":"        return n / (a1 + an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[60,73],"replacement":"n / (a1 + an)","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/38009398-3fbc-48a8-9589-cb1d8d9c03da/app.js","status":1,"testsRan":["myteste deve retornar"]},{"id":"3","location":{"end":{"column":27,"line":4},"start":{"column":20,"line":4}},"mutatedLines":"        return n * (a1 - an) / 2","mutatorName":"BinaryExpression","originalLines":"        return n * (a1 + an) / 2","range":[65,72],"replacement":"a1 - an","sourceFilePath":"/home/ubuntu/mutantarena/runner/mutants/38009398-3fbc-48a8-9589-cb1d8d9c03da/app.js","status":1,"testsRan":["myteste deve retornar"]}],"dateCreated":"2020-09-01T00:38:46.284Z"}],"time":1599000805,"total":29}}